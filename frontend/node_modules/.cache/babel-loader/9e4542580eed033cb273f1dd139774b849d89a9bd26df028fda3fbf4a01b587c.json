{"ast":null,"code":"// api.js\nconst API_BASE_URL = \"http://localhost:5001/api\";\n\n// Helper function for handling API calls\nconst apiCall = async (endpoint, options = {}) => {\n  const token = localStorage.getItem(\"token\");\n  const defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n    ...(token && {\n      Authorization: `Bearer ${token}`\n    })\n  };\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        ...defaultHeaders,\n        ...options.headers\n      }\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Something went wrong\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    throw error;\n  }\n};\n\n// Auth APIs\nexport const authAPI = {\n  login: credentials => apiCall(\"/users/login\", {\n    method: \"POST\",\n    body: JSON.stringify(credentials)\n  }),\n  signup: userData => apiCall(\"/users/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(userData)\n  }),\n  getProfile: () => apiCall(\"/users/profile\"),\n  updateProfile: userData => apiCall(\"/users/profile\", {\n    method: \"PUT\",\n    body: JSON.stringify(userData)\n  })\n};\n\n// Clinics APIs\nexport const clinicsAPI = {\n  getClinics: async (city = \"Gainesville\") => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/clinics?city=${encodeURIComponent(city)}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch clinics\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to fetch clinics:\", error);\n      throw error;\n    }\n  },\n  getClinicDetails: async clinicId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/clinics/${clinicId}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch clinic details\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to fetch clinic details:\", error);\n      throw error;\n    }\n  }\n};\n\n// Export both APIs\nexport default {\n  authAPI,\n  clinicsAPI\n};","map":{"version":3,"names":["API_BASE_URL","apiCall","endpoint","options","token","localStorage","getItem","defaultHeaders","Authorization","response","fetch","headers","ok","error","json","Error","message","console","authAPI","login","credentials","method","body","JSON","stringify","signup","userData","getProfile","updateProfile","clinicsAPI","getClinics","city","encodeURIComponent","getClinicDetails","clinicId"],"sources":["/Users/diegogomez/mern-auth copy/frontend/src/services/api.js"],"sourcesContent":["// api.js\nconst API_BASE_URL = \"http://localhost:5001/api\";\n\n// Helper function for handling API calls\nconst apiCall = async (endpoint, options = {}) => {\n  const token = localStorage.getItem(\"token\");\n\n  const defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n    ...(token && { Authorization: `Bearer ${token}` }),\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        ...defaultHeaders,\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Something went wrong\");\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    throw error;\n  }\n};\n\n// Auth APIs\nexport const authAPI = {\n  login: (credentials) =>\n    apiCall(\"/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify(credentials),\n    }),\n\n  signup: (userData) =>\n    apiCall(\"/users/signup\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n    }),\n\n  getProfile: () => apiCall(\"/users/profile\"),\n\n  updateProfile: (userData) =>\n    apiCall(\"/users/profile\", {\n      method: \"PUT\",\n      body: JSON.stringify(userData),\n    }),\n};\n\n// Clinics APIs\nexport const clinicsAPI = {\n  getClinics: async (city = \"Gainesville\") => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/clinics?city=${encodeURIComponent(city)}`\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch clinics\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to fetch clinics:\", error);\n      throw error;\n    }\n  },\n\n  getClinicDetails: async (clinicId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/clinics/${clinicId}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch clinic details\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to fetch clinic details:\", error);\n      throw error;\n    }\n  },\n};\n\n// Export both APIs\nexport default {\n  authAPI,\n  clinicsAPI,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}